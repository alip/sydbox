# sydbox example configuration for Exherbo
# vim: set et sw=4 sts=4 tw=80 ft=desktop :

# Global options are specified in the main group
[main]
# whether sydbox should colourize messages
# defaults to true
colour = true

# whether sydbox should lock magic commands
# this is equal to the -L/--lock command line switch.
lock = false

# whether sydbox should wait for all children, not just eldest,
# to exit before exiting. This doesn't work for exhereses because
# they may execute commands like udevd --daemon in pkg_postinst.
wait_all = false

# Add /proc/PID to allowed paths, there's no way to add this path using prefixes
# because PID varies between children.
# Defaults to true.
allow_proc_pid = true

# A list of path patterns that will suppress access violations.
# filters = /usr/lib*/python*/site-packages/*.pyc

# Logging options are specified under the log group.
[log]
# log file, by default logs go to standard error.
# file = /var/log/sydbox.log

# the verbosity of messages, defaults to 1
# 1 - error
# 2 - warning
# 3 - normal
# 4 - verbose
# 5 - debug
# 6 - crazy debug
level = 1

# Sandboxing options are specified under the sandbox group
[sandbox]
# whether sydbox should do path sandboxing
# defaults to true
path = true

# whether sydbox should do execve(2) sandboxing
# defaults to false
exec = false

# whether sydbox should do network sandboxing
# defaults to false
network = false

# Filesystem prefixes are specified under the prefix group
[prefix]
# List of path prefixes that processes are allowed to write
write = /dev/fd;/proc/self/fd;/dev/stdout;/dev/stderr;/dev/zero;/dev/null;/dev/full;/dev/console;/dev/random;/dev/tty;/dev/pty;/dev/tts;/dev/ptmx;/dev/pts;/dev/shm;/selinux/context;/proc/self/attr;/proc/self/task;/tmp/;/var/tmp;${PALUDIS_TMPDIR};/var/cache

# List of path prefixes that processes can execute, only useful when execve(2)
# sandboxing is on.
exec = ${PALUDIS_EBUILD_DIR}/utils/locked_pipe_command

# Network specific options are specified in the net group
[net]
# Network sandboxing default
# One of allow, deny, local
# Defaults to allow
default = allow

# Whether connect(2) requests should be restricted to addresses that were
# bind(2)'ed by one of the parents.
# Defaults to false
restrict_connect = false

# Additional addresses to be allowed when net default is deny or net default is
# local and restrict_connect is set.
# This is a list of addresses in one of the possible forms:
# unix:///path/to/socket
# inet://ipv4_address:port
# inet6://ipv6_address:port
whitelist = unix:///var/run/nscd/socket

