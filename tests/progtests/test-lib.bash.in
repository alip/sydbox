#!/usr/bin/env bash
# vim: set sw=4 et sts=4 tw=80 :

# Check for bash
if test -z "${BASH_VERSION}"; then
    echo "This is not bash!"
    exit 127
fi

# Reset environment
export LANG=C
export LC_ALL=C
export TZ=UTC

unset PWD
unset SANDBOX_PHASE
unset SANDBOX_WRITE
unset SANDBOX_PREDICT
unset SANDBOX_NET
unset SANDBOX_CONFIG
unset SANDBOX_NO_COLOUR
unset SANDBOX_LOG

cwd="$(readlink -f .)"
SANDBOX_LOG="${cwd}/sydbox-$$.log"
remove_log=true

if [[ -z "${no_create_file}" ]]; then
    old_umask=$(umask)
    umask 022
    touch arnold.layne
    if [[ 0 != $? ]]; then
        die "touch arnold.layne"
    elif [[ ! -f arnold.layne ]]; then
        die "touch arnold.layne (no file)"
    fi
    umask $old_umask
fi

if [[ -z "${no_create_dir}" ]]; then
    old_umask=$(umask)
    umask 022
    mkdir see.emily.play
    if [[ 0 != $? ]]; then
        die "mkdir see.emily.play"
    elif [[ ! -d see.emily.play ]]; then
        die "mkdir see.emily.play (no dir)"
    fi
    umask $old_umask
fi

cleanup() {
    rm -fr arnold.layne >>"${SANDBOX_LOG}" 2>&1
    rm -f its.not.the.same >>"${SANDBOX_LOG}" 2>&1
    rm -f see.emily.play/gnome >>"${SANDBOX_LOG}" 2>&1
    rmdir see.emily.play >>"${SANDBOX_LOG}" 2>&1
    unlink jugband.blues >>"${SANDBOX_LOG}" 2>&1
    $remove_log && rm -f "${SANDBOX_LOG}" 2>&1
}
trap 'cleanup' EXIT

sydbox() {
    @TOP_BUILDDIR@/src/sydbox -c /dev/null -l "${SANDBOX_LOG}" -d -d "$@"
}

say() {
    echo "* $@"
}

die() {
    echo "REASON: $@" >&2
    echo "LOG: ${SANDBOX_LOG}"
    echo ">>> Testcase failed: $@" >> "${SANDBOX_LOG}"
    remove_log=false
    exit 1
}

start_test() {
    say "$@"
    echo ">>> Starting testcase $@" >> "${SANDBOX_LOG}"
}

end_test() {
    echo ">>> Finished testcase" >> "${SANDBOX_LOG}"
}
